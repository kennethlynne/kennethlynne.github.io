import * as React from "react"
import { Stack, Frame, addPropertyControls, ControlType } from "framer"

function Empty(props) {
    return (
        <Frame
            size="100%"
            style={{
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                flexDirection: "column",
                color: "#8855FF",
                background: "rgba(136, 85, 255, 0.1)",
            }}
        >
            <div
                style={{
                    fontWeight: 500,
                    fontSize: "1em",
                    marginTop: 10,
                }}
            >
                Select a frame
            </div>
        </Frame>
    )
}

function Container({ child, headerHeight, isOpen, setOpen, key }) {
    const height = !isOpen ? headerHeight : child.props.height
    const transition = {
        type: "spring",
        stiffness: 600,
        damping: 40,
    }
    return (
        <Frame
            background="transparent"
            width="100%"
            height={height}
            animate={{ height, transition }}
            overflow={"hidden"}
            onTap={setOpen}
        >
            {React.cloneElement(child, { width: "100%" })}
        </Frame>
    )
}

export function Accordion(props) {
    const { headerHeight, children, firstOpen } = props
    if (!children.length) return <Empty />
    const [childStates, setChildStates] = React.useState(
        children.map((_, i) => i == 0 && firstOpen)
    )
    React.useEffect(() => {
        setChildStates(children.map((_, i) => i == 0 && firstOpen))
    }, [firstOpen])
    return (
        <Stack size="100%" gap={0}>
            {children.map((child, i) => (
                <Container
                    key={i}
                    child={child}
                    isOpen={childStates[i]}
                    headerHeight={headerHeight}
                    setOpen={() =>
                        setChildStates(children.map((_, _i) => _i == i))
                    }
                />
            ))}
        </Stack>
    )
}

Accordion.defaultProps = {
    height: 400,
    width: 300,
}

addPropertyControls(Accordion, {
    firstOpen: {
        type: ControlType.Boolean,
    },
    headerHeight: {
        type: ControlType.Number,
        defaultValue: 50,
    },
    children: {
        type: ControlType.Array,
        propertyControl: {
            type: ControlType.ComponentInstance,
        },
    },
})
