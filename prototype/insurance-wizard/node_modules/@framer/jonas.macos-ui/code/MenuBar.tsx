import * as React from "react";
import { PropertyControls, ControlType, Frame } from "framer";

type Appearance = "dark" | "light";

interface Props {
  appearance: Appearance;
  menuItems: string;
  width: number;
  height: number;
}

interface State {
  time: string;
}

export class MenuBar extends React.Component<Props, State> {
  static defaultProps = {
    appearance: "light",
    menuItems: "File, Edit, View, Window, Help",
    height: 22,
    width: 440
  };

  static propertyControls: PropertyControls<Props> = {
    menuItems: { type: ControlType.String, title: "Items" },
    appearance: {
      type: ControlType.Enum,
      options: ["dark", "light"],
      optionTitles: ["Dark", "Light"],
      title: "Appearance"
    }
  };

  timer: number;

  state = {
    time: "9:00"
  };

  componentDidMount() {
    this.timer = window.setInterval(() => {
      this.updateTime();
    }, 1000);
  }

  componentWillUnmount() {
    window.clearInterval(this.timer);
  }

  updateTime = () => {
    const date = new Date();
    const time =
      ("0" + date.getHours()).slice(-2) +
      ":" +
      ("0" + date.getMinutes()).slice(-2);
    this.setState({ time });
  };

  render() {
    const { width, height, appearance, menuItems } = this.props;

    const items = menuItems.split(",").map(item => {
      return <span style={spanStyleLeft}>{item}</span>;
    });

    return (
      <Frame
        width={width}
        height={height}
        style={{ ...mainStyle, ...style(appearance) }}
      >
        <div style={leftStyle}>
          <span style={appleSpan}>{"ï£¿"}</span>
          {items}
        </div>
        <div style={rightStyle}>{menuExtras(appearance, this.state.time)}</div>
      </Frame>
    );
  }
}

function style(appearance: Appearance): React.CSSProperties {
  switch (appearance) {
    case "light":
      return {
        background: "rgba(248, 248, 248, .85)",
        boxShadow: "0 1px 0 rgba(0,0,0,.15), 0 4px 28px rgba(0,0,0,.28)",
        color: "black"
      };
    case "dark":
      return {
        background: "rgba(82, 82, 82, .7)",
        boxShadow: "0 1px 0 rgba(0,0,0,.7)",
        color: "white",
        fontWeight: 500
      };
  }
}

const mainStyle: React.CSSProperties = {
  display: "flex",
  alignItems: "center",
  justifyContent: "space-between",
  fontSize: 14,
  height: "100%"
};

const leftStyle: React.CSSProperties = {
  display: "flex",
  alignItems: "center",
  justifyContent: "start",
  height: "100%"
};

const rightStyle: React.CSSProperties = {
  display: "flex",
  alignItems: "center",
  justifyContent: "end",
  height: "100%"
};

const spanStyleLeft: React.CSSProperties = {
  marginLeft: 16
};

const spanStyleRight: React.CSSProperties = {
  marginRight: 16
};

const appleSpan: React.CSSProperties = {
  ...spanStyleLeft,
  fontSize: 20
};

function menuExtras(appearance: Appearance, time: string) {
  return [
    wrapInRightItem(time),
    searchIcon(appearance),
    notificationCenterIcon(appearance)
  ];
}

function wrapInRightItem(content: string) {
  return (
    <div
      dangerouslySetInnerHTML={{
        __html: content
      }}
      style={spanStyleRight}
    />
  );
}

function notificationCenterIcon(appearance: Appearance) {
  const opacity = appearance === "dark" ? 1 : 0.76;
  return wrapInRightItem(`<svg width="18px" height="10px" viewBox="0 0 18 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" fill-opacity="${opacity}">
      <g id="Menus-/-Menu-Bar-/-Menu-Extras-/-Aqua" transform="translate(-284.000000, -6.000000)" fill="${
        appearance === "dark" ? "white" : "black"
      }">
          <path d="M288,8 L302,8 L302,6 L288,6 L288,8 Z M284,8 L286,8 L286,6 L284,6 L284,8 Z M288,11.999 L299.001,11.999 L299.001,9.999 L288,9.999 L288,11.999 Z M284,11.999 L286,11.999 L286,9.999 L284,9.999 L284,11.999 Z M288,16 L302,16 L302,14 L288,14 L288,16 Z M284,16 L286,16 L286,14 L284,14 L284,16 Z" id="Menus-/-Menu-Bar-/-x-/-Menu-Extras-/-Notification-Center" style="mix-blend-mode: hard-light;"></path>
      </g>
  </g>
</svg>`);
}

function searchIcon(appearance: Appearance) {
  const color = appearance === "dark" ? "white" : "black";
  const opacity = appearance === "dark" ? 1 : 0.76;
  return wrapInRightItem(`<svg width="15px" height="13px" viewBox="0 0 15 13" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" fill-opacity="${opacity}">
        <g id="Menus-/-Menu-Bar-/-Menu-Extras-/-Aqua" transform="translate(-224.000000, -4.000000)" fill="${color}">
            <path d="M229.198259,13.2 C226.989998,13.2 225.199598,11.409 225.199598,9.2 C225.199598,6.991 226.989998,5.2 229.198259,5.2 C231.406519,5.2 233.196919,6.991 233.196919,9.2 C233.196919,11.409 231.406519,13.2 229.198259,13.2 M237.960324,16.908 L233.350868,12.298 C233.998651,11.43 234.396518,10.366 234.396518,9.2 C234.396518,6.328 232.069297,4 229.198259,4 C226.32722,4 224,6.328 224,9.2 C224,12.071 226.32722,14.399 229.198259,14.399 C230.361869,14.399 231.424513,14.004 232.290223,13.358 L236.899679,17.969 C237.192581,18.262 237.667422,18.262 237.960324,17.969 C238.253226,17.676 238.253226,17.201 237.960324,16.908" id="Menus-/-Menu-Bar-/-x-/-Menu-Extras-/-Spotlight" style="mix-blend-mode: hard-light;"></path>
        </g>
    </g>
</svg>`);
}
